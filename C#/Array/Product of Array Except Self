238. Product of Array Except Self
Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Solve it without division and in O(n).

For example, given [1,2,3,4], return [24,12,8,6].

Follow up:
Could you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose of space complexity analysis.)

    public class Solution {
        public int[] ProductExceptSelf(int[] nums) {
            int n=nums.Length;
            if(n==0)
                return nums;
            //two round
            int[] res=new int[n];
            int product=1;
            res[0] = 1;
            for(int i=1;i<n;i++)
            {
                product *= nums[i-1];
                res[i] = product;
            }
            product=1;
            for(int i=n-2;i>=0;i--)
            {
                product *= nums[i+1];
                res[i] = res[i]*product;
            }
            
            return res;
        }
    }
